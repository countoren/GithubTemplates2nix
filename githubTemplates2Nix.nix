{ nixpkgs ? import <nixpkgs>{}
, githubUser ? "countoren"
, githubToken ? ""
, templatePrefix ? "template-"

, curl ? nixpkgs.curl
, jq   ? nixpkgs.jq
, git  ? nixpkgs.git
}:
let 
  #TODO: synthesize githubUser, templateName
  #TODO: use git ls-remote for getting branches instead of git api
  curlCmd = ''${curl}/bin/curl ${(if githubToken != "" then "-u \"${githubUser}:${githubToken}\"" else "")}'';
  jqCmd = ''${jq}/bin/jq'';
  gitCmd = ''${git}/bin/git'';
  
in 
rec {
    ght2nix-repo = nixpkgs.writeShellScript "ght2nix-repo" ''
      while read repo; do
        IFS=$'\n'
        for line in $(${gitCmd} ls-remote "https://github.com/${githubUser}/"$repo) ; do
          if [[ $line =~ ([^$(printf '\t')]*)$(printf '\t')refs/heads/${templatePrefix}(.*) ]]; then
           templateName=''${BASH_REMATCH[2]}
           revision=''${BASH_REMATCH[1]}

           echo "    ''${templateName} = tarUrlToDrv { name = \""$templateName"\"; url = \"https://github.com/${githubUser}/$repo/archive/''${revision}.tar.gz\"; };"  
          
          fi
        done
      done < "''${1:-/dev/stdin}"


  '';
  ght2nix = nixpkgs.writeShellScriptBin "ght2nix" ''
    echo '#this file generated by githubTemplates2nix'
    echo $(date -u +"%H:%M:%S")
    echo 'let tarUrlToDrv = (import ${./.}/templatesUtils.nix).tarUrlToDrv;'
    echo 'in'
    echo '{'
      ${curlCmd} "https://api.github.com/users/${githubUser}/repos" | ${jqCmd} -r ".[] .name" | ${ght2nix-repo}
    echo '}'
    echo $(date -u +"%H:%M:%S")
  '';




}
